import React ,{useState, useEffect} from 'react'
import {Loader, FormField, Card} from '../components'

const RenderCards = ({data, title}) => {
  if (data?.lenght > 0) {
    return data.map ((post) => <Card key={post.id} {...post}/>)
  }

  return (
    <h2 className='mt-5
     font-bold text-[#6449FF] text-xl uppercase'>
      {title}
    </h2>
  )
}

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setsearchText] = useState('')
  const [SearchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);
  useEffect(() => {
    const fetchPost = async () =>{
      setLoading(true);

      try {
        const response = await fetch ('http://localhost:8080/api/v1/post', {
          methode: 'GET',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        if (response.ok) {
          const result = await response.json();

          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error)
      } finally {
        setLoading(false);
      }
    }

    fetchPost()
  }, []);

  const handleSearchChange =(e) => {
    clearTimeout(searchTimeout)

    setsearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()))
        setSearchedResults(searchResults)
      }, 500)
    )
  }

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>The Community Showcase</h1>
        <p className='mt-2 text-[#666E75] text-[14px] max-w-[500px]'>Browse through a collction of imaginative and visually stunning images generated by DALLY-E AI</p>
      </div>

      <div className='mt-16'>
        <FormField 
        LableName="search posts"
        type = "text"
        name = "text"
        placeholder = "search posts"
        value={searchText}
        handleChange={handleSearchChange}
        />
      </div>

      <div className='mt-10'>
      { loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
          ) : (
            <>
              {searchText && (
                <h2 className='font-medium text-[#666E75] text-xl mb-3'>Showing results for <span className='text-[222328]'>{searchText}</span>
                </h2>
              )}
              <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                {searchText ? (
                  <RenderCards data = {SearchedResults}
                  title = 'No search results found'/>
                ) : (
                  <RenderCards data = {allPosts}
                  title = 'No posts found'/>
                )}
              </div>
            </>
          )}
      </div>
    </section>
  )
}

export default Home